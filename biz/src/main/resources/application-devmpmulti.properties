#是否为多数据源
spring.datasource.multi=true

#mysql1第一个数据源
spring.datasource.druid.mysql1.name=mysql1
spring.datasource.druid.mysql1.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.mysql1.filters=stat,wall
spring.datasource.druid.mysql1.filter.stat.log-slow-sql=true
spring.datasource.druid.mysql1.filter.stat.merge-sql=true
spring.datasource.druid.mysql1.filter.stat.slow-sql-millis=200

spring.datasource.druid.mysql1.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.mysql1.url=jdbc:mysql://192.168.100.88:3306/m8?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false
spring.datasource.druid.mysql1.username=root
spring.datasource.druid.mysql1.password=root

#配置初始化大小/最小/最大
spring.datasource.druid.mysql1.initial-size=5
spring.datasource.druid.mysql1.min-idle=5
spring.datasource.druid.mysql1.max-active=20

#获取连接等待超时时间
spring.datasource.druid.mysql1.max-wait=10000

#间隔多久进行一次检测，检测需要关闭的空闲连接
spring.datasource.druid.mysql1.time-between-eviction-runs-millis=60000
spring.datasource.druid.mysql1.validation-query=SELECT 1
spring.datasource.druid.mysql1.test-while-idle=true
spring.datasource.druid.mysql1.test-on-borrow=false
spring.datasource.druid.mysql1.test-on-return=false
#打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
spring.datasource.druid.mysql1.pool-prepared-statements=false
spring.datasource.druid.mysql1.max-pool-prepared-statement-per-connection-size=20

#mysql2第二数据源

spring.datasource.druid.mysql2.name=mysql2
spring.datasource.druid.mysql2.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.mysql2.filters=stat,wall
spring.datasource.druid.mysql2.filter.stat.log-slow-sql=true
spring.datasource.druid.mysql2.filter.stat.merge-sql=true
spring.datasource.druid.mysql2.filter.stat.slow-sql-millis=200

spring.datasource.druid.mysql2.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.mysql2.url=jdbc:mysql://192.168.100.88:3306/nanhai-test?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false
spring.datasource.druid.mysql2.username=root
spring.datasource.druid.mysql2.password=root

#配置初始化大小/最小/最大
spring.datasource.druid.mysql2.initial-size=5
spring.datasource.druid.mysql2.min-idle=5
spring.datasource.druid.mysql2.max-active=20

#获取连接等待超时时间
spring.datasource.druid.mysql2.max-wait=10000

#间隔多久进行一次检测，检测需要关闭的空闲连接
spring.datasource.druid.mysql2.time-between-eviction-runs-millis=60000
spring.datasource.druid.mysql2.validation-query=SELECT 1
spring.datasource.druid.mysql2.test-while-idle=true
spring.datasource.druid.mysql2.test-on-borrow=false
spring.datasource.druid.mysql2.test-on-return=false
#打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
spring.datasource.druid.mysql2.pool-prepared-statements=false
spring.datasource.druid.mysql2.max-pool-prepared-statement-per-connection-size=20

#使用mybatis-plus generator时候配置
spring.datasource.druid.url=${spring.datasource.druid.mysql1.url}
spring.datasource.druid.username=${spring.datasource.druid.mysql1.username}
spring.datasource.druid.password=${spring.datasource.druid.mysql1.password}
spring.datasource.druid.driver-class-name=${spring.datasource.druid.mysql1.driver-class-name}


#undertow服务设置
#因为是NIO设置为跟CPU核心数差不多就行
server.undertow.io-threads=16

# 阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程
# 它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
server.undertow.worker-threads=256

# 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
# 每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可
server.undertow.buffer-size=1024

# 是否分配的直接内存(NIO直接分配的堆外内存)
server.undertow.direct-buffers=true



#swagger开关
swagger.enable=true

##mp的扫描路径
mp.scanner.package=com.iscas.biz.test.mapper*,com.iscas.base.mp.table.mapper*,\
com.iscas.base.mp.test.mapper*,com.iscas.biz.mp.mapper*