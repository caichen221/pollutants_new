#如果配置了spring.datasource.druid.xxx.connect-properties.config.decrypt=true启用数据库密码加密，如果不启用会爆出安全漏洞
加密方式1：调用com.alibaba.druid.filter.config.ConfigTools 中的主函数加密
加密方式2：使用本工程资料下的DruidPwdCreator.class  加密的命令(java需要11以上)：  java DruidPwdCreator <密码>
将加密生成的公钥(publicKey)配置在每个数据源的spring.datasource.druid.xxx.connect-properties.config.decrypt.key
加加密生成的密文配置在每个数据源的spring.datasource.druid.xxx.password


#数据源名称
spring.datasource.names=mysql1,mysql2

#mysql1第一个数据源
spring.datasource.druid.mysql1.filters=stat,wall,slf4j
spring.datasource.druid.mysql1.filter.stat.log-slow-sql=true
spring.datasource.druid.mysql1.filter.stat.merge-sql=true
spring.datasource.druid.mysql1.filter.stat.slow-sql-millis=200

spring.datasource.druid.mysql1.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.mysql1.url=jdbc:mysql://localhost:3306/newframe?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&allowMultiQueries=true&rewriteBatchedStatements=true
spring.datasource.druid.mysql1.username=root
spring.datasource.druid.mysql1.connect-properties.config.decrypt=true
spring.datasource.druid.mysql1.connect-properties.config.decrypt.key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKgsqPRiNgQEVnEiHUz4QnHQwUrcXpSGiaF3/k9aD50V3i9ZCl0BrdzPsd7YEk0Z6Iq2u+8QKkhr+iI5PVlGr0MCAwEAAQ==
spring.datasource.druid.mysql1.password=mVA4vKNc54eobMJn/efWlBPJdoheigzM8jF16aqtqwD2BQ+ZnKbE6y69oDAGGEOz/ZNDpFHc/8YekI2FvTGeqw==
spring.datasource.druid.mysql1.pointcut=execution(* com.iscas.biz.test.service.db1..*.*(..))

#初始化脚本(多个以逗号分隔)
spring.datasource.druid.mysql1.schema=classpath:sql/newframe.sql
#是否开启脚本初始化，always-开启  never-不开启
spring.datasource.druid.mysql1.initialization-mode=never


#配置初始化大小/最小/最大
spring.datasource.druid.mysql1.initial-size=5
spring.datasource.druid.mysql1.min-idle=5
spring.datasource.druid.mysql1.max-active=20

#获取连接等待超时时间
spring.datasource.druid.mysql1.max-wait=10000

#间隔多久进行一次检测，检测需要关闭的空闲连接
spring.datasource.druid.mysql1.time-between-eviction-runs-millis=28700
spring.datasource.druid.mysql1.validation-query=SELECT 1
spring.datasource.druid.mysql1.test-while-idle=true
spring.datasource.druid.mysql1.test-on-borrow=false
spring.datasource.druid.mysql1.test-on-return=false
spring.datasource.druid.mysql1.validation-query-timeout=1
spring.datasource.druid.mysql1.num-tests-per-eviction-run=${spring.datasource.druid.mysql1.max-active}
spring.datasource.druid.mysql1.min-evictable-idle-time-millis=18000000
#打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
spring.datasource.druid.mysql1.pool-prepared-statements=false
spring.datasource.druid.mysql1.max-pool-prepared-statement-per-connection-size=20

#mysql2第二数据源
spring.datasource.druid.mysql2.filters=stat,wall,slf4j
spring.datasource.druid.mysql2.filter.stat.log-slow-sql=true
spring.datasource.druid.mysql2.filter.stat.merge-sql=true
spring.datasource.druid.mysql2.filter.stat.slow-sql-millis=200

spring.datasource.druid.mysql2.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.mysql2.url=jdbc:mysql://localhost:3306/newframe?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&allowMultiQueries=true&rewriteBatchedStatements=true
spring.datasource.druid.mysql2.username=root
spring.datasource.druid.mysql2.connect-properties.config.decrypt=true
spring.datasource.druid.mysql2.connect-properties.config.decrypt.key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKgsqPRiNgQEVnEiHUz4QnHQwUrcXpSGiaF3/k9aD50V3i9ZCl0BrdzPsd7YEk0Z6Iq2u+8QKkhr+iI5PVlGr0MCAwEAAQ==
spring.datasource.druid.mysql2.password=mVA4vKNc54eobMJn/efWlBPJdoheigzM8jF16aqtqwD2BQ+ZnKbE6y69oDAGGEOz/ZNDpFHc/8YekI2FvTGeqw==
spring.datasource.druid.mysql2.pointcut=execution(* com.iscas.biz.test.service.db2..*.*(..))

#初始化脚本(多个以逗号分隔)
#spring.datasource.druid.mysql2.schema=classpath:sql/newframe.sql
#是否开启脚本初始化，always-开启  never-不开启
#spring.datasource.druid.mysql2.initialization-mode=always

#配置初始化大小/最小/最大
spring.datasource.druid.mysql2.initial-size=5
spring.datasource.druid.mysql2.min-idle=5
spring.datasource.druid.mysql2.max-active=20

#获取连接等待超时时间
spring.datasource.druid.mysql2.max-wait=10000

#间隔多久进行一次检测，检测需要关闭的空闲连接
spring.datasource.druid.mysql2.time-between-eviction-runs-millis=28700
spring.datasource.druid.mysql2.validation-query=SELECT 1
spring.datasource.druid.mysql2.test-while-idle=true
spring.datasource.druid.mysql2.test-on-borrow=false
spring.datasource.druid.mysql2.test-on-return=false
spring.datasource.druid.mysql2.validation-query-timeout=1
spring.datasource.druid.mysql2.num-tests-per-eviction-run=${spring.datasource.druid.mysql2.max-active}
spring.datasource.druid.mysql2.min-evictable-idle-time-millis=18000000
#打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
spring.datasource.druid.mysql2.pool-prepared-statements=false
spring.datasource.druid.mysql2.max-pool-prepared-statement-per-connection-size=20

#使用mybatis-plus generator时候配置
spring.datasource.druid.url=${spring.datasource.druid.mysql1.url}
spring.datasource.druid.username=${spring.datasource.druid.mysql1.username}
spring.datasource.druid.password=${spring.datasource.druid.mysql1.password}
spring.datasource.druid.driver-class-name=${spring.datasource.druid.mysql1.driver-class-name}

##atomikos日志相关配置##
#atomikos打印日志路径
spring.jta.atomikos.properties.log-base-name=atomikos-log
#修改日志文件路径
spring.jta.atomikos.properties.log-base-dir=./atomikos-logs
#日志开关
spring.jta.atomikos.properties.enable-logging=true

#swagger开关
swagger.enable=true



