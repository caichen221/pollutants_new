apply plugin: 'war'


configurations {
    api.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    api.exclude group: 'org.apache.tomcat'
    api.exclude group: 'org.apache.tomcat.embed'
    api.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
//    api.exclude group: 'ch.qos.logback', module: 'logback-access'
    api.exclude group: 'ch.qos.logback', module: 'logback-classic'
//    api.exclude group: 'ch.qos.logback', module: 'logback-core'
}

dependencies {

    //==============一些可按需启用的功能==============//
//    api project(":common:ratelimit-spring-boot-starter")
//    api project(":common:xss-filter-spring-boot-starter")
//    api project(":common:datasong-spring-boot-starter")
//    api project(":common:check-referer-spring-boot-starter")
//    api project(":common:biz-mp-spring-boot-starter")
    api project(":common:biz-base-spring-boot-starter")
    //============================================//

    api group: 'javax.annotation', name: 'javax.annotation-api', version: "${annotationApiVersion}"

    api group: 'org.eweb4j', name: 'fel', version: "${felVersion}"
    api group: 'xerces', name: 'xercesImpl', version: "${xercesImplVersion}"

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
}



// 打胖包配置
bootJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Start-Class': 'com.iscas.biz.BizApp'
    }
//    launchScript()
}

bootWar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Start-Class': 'com.iscas.biz.BizApp'
    }
    rootSpec.exclude("**/undertow-*.jar")
//    launchScript()
}

bootRun {
    mainClass = 'com.iscas.biz.BizApp'
}


dockerCreateDockerfile {
    instruction 'RUN ln -snf /usr/share/zoneinfo/$TimeZone /etc/localtime && echo $TimeZone > /etc/timezone'
    environmentVariable 'TimeZone', 'Asia/Shanghai'
    environmentVariable 'myenv', 'this is my test'
}

docker {
    url = "${dockerRemoteAddr}"
    springBootApplication {
        baseImage = "${dockerRegistryUrl}/library/oneclick/openjdk:11-jdk-oracle"
        maintainer = 'newframe'
        ports = [7901]
        images = ["${dockerRegistryUrl}/library/${rootProject.name}/${project.name}:${version}"]
        jvmArgs = ['-Djava.security.egd=file:/dev/./urandom']
        mainClassName = "com.iscas.business.product.ProductApp"
    }
    registryCredentials {
        url = "http://${dockerRegistryUrl}"
        username = "${dockerRegistryUsername}"
        password = "${dockerRegistryPassword}"
    }
}

