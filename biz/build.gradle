
apply plugin: 'war'


configurations {
    api.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    api.exclude group: 'org.apache.tomcat'
    api.exclude group: 'org.apache.tomcat.embed'
}

bootJar {
    manifest {
        attributes 'Start-Class': 'com.iscas.biz.BizApp'
    }
//    launchScript()
}

bootWar {
    manifest {
        attributes 'Start-Class': 'com.iscas.biz.BizApp'
    }
//    launchScript()
}

bootRun {
    main = 'com.iscas.biz.BizApp'
}

dependencies {
    api project(":biz-base")
//    api project(":common:common-tools")

    api project(":biz-ssh-server")
//    api project(":special:biz-neo4j")


    //SSH客户端
//    api project(":special:common-ssh-tools")

    //引入mybatis,如果引入了这个模块，
    api project(":biz-mp")
    
    //引入jpa,如果引入了这个模块
//    api project(":biz-jpa")

    implementation group: 'org.webjars', name: 'jquery', version: "${jqueryVersion}"


    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    //devTools 默认不使用
//    developmentOnly("org.springframework.boot:spring-boot-devtools")

}

//打入本地maven库配置
//install {
//    repositories.mavenInstaller {
//        pom.version="${project.version}"
//        pom.artifactId="${project.archivesBaseName}"
//        pom.groupId="${project.group}"
//    }
//}
bootBuildImage {
    imageName = "192.168.100.96:80/library/${project.name}:${project.version}"
    pullPolicy = "IF_NOT_PRESENT"
    builder = "paketobuildpacks/builder:base"
    publish = true
    docker {
        host = "tcp://192.168.100.91:2375"
        tlsVerify = false
//        certPath = "/home/users/.minikube/certs"
        publishRegistry {
            username = "admin"
            password = "Harbor12345"
            url = "http://192.168.100.96"
            email = "76775081@qq.com"
        }
    }

}
