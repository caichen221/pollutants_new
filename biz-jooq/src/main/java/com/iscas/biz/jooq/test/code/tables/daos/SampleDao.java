/*
 * This file is generated by jOOQ.
 */
package com.iscas.biz.jooq.test.code.tables.daos;


import com.iscas.biz.jooq.test.code.tables.Sample;
import com.iscas.biz.jooq.test.code.tables.records.SampleRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SampleDao extends DAOImpl<SampleRecord, com.iscas.biz.jooq.test.code.tables.pojos.Sample, Integer> {

    /**
     * Create a new SampleDao without any configuration
     */
    public SampleDao() {
        super(Sample.SAMPLE, com.iscas.biz.jooq.test.code.tables.pojos.Sample.class);
    }

    /**
     * Create a new SampleDao with an attached configuration
     */
    public SampleDao(Configuration configuration) {
        super(Sample.SAMPLE, com.iscas.biz.jooq.test.code.tables.pojos.Sample.class, configuration);
    }

    @Override
    public Integer getId(com.iscas.biz.jooq.test.code.tables.pojos.Sample object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.iscas.biz.jooq.test.code.tables.pojos.Sample> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Sample.SAMPLE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.iscas.biz.jooq.test.code.tables.pojos.Sample> fetchById(Integer... values) {
        return fetch(Sample.SAMPLE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.iscas.biz.jooq.test.code.tables.pojos.Sample fetchOneById(Integer value) {
        return fetchOne(Sample.SAMPLE.ID, value);
    }

    /**
     * Fetch records that have <code>c1 BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.iscas.biz.jooq.test.code.tables.pojos.Sample> fetchRangeOfC1(String lowerInclusive, String upperInclusive) {
        return fetchRange(Sample.SAMPLE.C1, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>c1 IN (values)</code>
     */
    public List<com.iscas.biz.jooq.test.code.tables.pojos.Sample> fetchByC1(String... values) {
        return fetch(Sample.SAMPLE.C1, values);
    }

    /**
     * Fetch records that have <code>c2 BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.iscas.biz.jooq.test.code.tables.pojos.Sample> fetchRangeOfC2(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Sample.SAMPLE.C2, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>c2 IN (values)</code>
     */
    public List<com.iscas.biz.jooq.test.code.tables.pojos.Sample> fetchByC2(Long... values) {
        return fetch(Sample.SAMPLE.C2, values);
    }

    /**
     * Fetch records that have <code>c3 BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.iscas.biz.jooq.test.code.tables.pojos.Sample> fetchRangeOfC3(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(Sample.SAMPLE.C3, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>c3 IN (values)</code>
     */
    public List<com.iscas.biz.jooq.test.code.tables.pojos.Sample> fetchByC3(Byte... values) {
        return fetch(Sample.SAMPLE.C3, values);
    }

    /**
     * Fetch records that have <code>c4 BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.iscas.biz.jooq.test.code.tables.pojos.Sample> fetchRangeOfC4(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Sample.SAMPLE.C4, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>c4 IN (values)</code>
     */
    public List<com.iscas.biz.jooq.test.code.tables.pojos.Sample> fetchByC4(Boolean... values) {
        return fetch(Sample.SAMPLE.C4, values);
    }
}
