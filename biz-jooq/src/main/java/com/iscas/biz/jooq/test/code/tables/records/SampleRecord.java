/*
 * This file is generated by jOOQ.
 */
package com.iscas.biz.jooq.test.code.tables.records;


import com.iscas.biz.jooq.test.code.tables.Sample;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SampleRecord extends UpdatableRecordImpl<SampleRecord> implements Record5<Integer, String, Long, Byte, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>test_jooq.sample.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>test_jooq.sample.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test_jooq.sample.c1</code>.
     */
    public void setC1(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>test_jooq.sample.c1</code>.
     */
    public String getC1() {
        return (String) get(1);
    }

    /**
     * Setter for <code>test_jooq.sample.c2</code>.
     */
    public void setC2(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>test_jooq.sample.c2</code>.
     */
    public Long getC2() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>test_jooq.sample.c3</code>.
     */
    public void setC3(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>test_jooq.sample.c3</code>.
     */
    public Byte getC3() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>test_jooq.sample.c4</code>.
     */
    public void setC4(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>test_jooq.sample.c4</code>.
     */
    public Boolean getC4() {
        return (Boolean) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, Long, Byte, Boolean> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, Long, Byte, Boolean> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Sample.SAMPLE.ID;
    }

    @Override
    public Field<String> field2() {
        return Sample.SAMPLE.C1;
    }

    @Override
    public Field<Long> field3() {
        return Sample.SAMPLE.C2;
    }

    @Override
    public Field<Byte> field4() {
        return Sample.SAMPLE.C3;
    }

    @Override
    public Field<Boolean> field5() {
        return Sample.SAMPLE.C4;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getC1();
    }

    @Override
    public Long component3() {
        return getC2();
    }

    @Override
    public Byte component4() {
        return getC3();
    }

    @Override
    public Boolean component5() {
        return getC4();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getC1();
    }

    @Override
    public Long value3() {
        return getC2();
    }

    @Override
    public Byte value4() {
        return getC3();
    }

    @Override
    public Boolean value5() {
        return getC4();
    }

    @Override
    public SampleRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public SampleRecord value2(String value) {
        setC1(value);
        return this;
    }

    @Override
    public SampleRecord value3(Long value) {
        setC2(value);
        return this;
    }

    @Override
    public SampleRecord value4(Byte value) {
        setC3(value);
        return this;
    }

    @Override
    public SampleRecord value5(Boolean value) {
        setC4(value);
        return this;
    }

    @Override
    public SampleRecord values(Integer value1, String value2, Long value3, Byte value4, Boolean value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SampleRecord
     */
    public SampleRecord() {
        super(Sample.SAMPLE);
    }

    /**
     * Create a detached, initialised SampleRecord
     */
    public SampleRecord(Integer id, String c1, Long c2, Byte c3, Boolean c4) {
        super(Sample.SAMPLE);

        setId(id);
        setC1(c1);
        setC2(c2);
        setC3(c3);
        setC4(c4);
    }
}
