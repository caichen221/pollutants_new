
buildscript {
    repositories {
        maven { url "${nexusUrl}" }
        maven {url "${aliyunUrl}"}
        maven { url "${springUrl}" }
        jcenter()
        mavenCentral()

    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

    }
}
//task wrapper(type: Wrapper) {
//    gradleVersion = '5.4.1'
//}


apply plugin:'maven'

subprojects  {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'maven'
    group = 'com.iscas'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = "${javaVersion}".toFloat()
    targetCompatibility = "${javaVersion}".toFloat()
//    sourceCompatibility = 1.11
//    targetCompatibility = 1.11

    configurations {
        compile.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
        compile.exclude group: 'org.apache.tomcat'
        compile.exclude group: 'org.apache.tomcat.embed'
        compile.exclude group: 'com.zaxxer', module:'HikariCP'
//        compile.exclude group: 'ch.qos.logback'
//        compile.exclude group: 'org.slf4j', module:'slf4j-api'
    }

    repositories {
        maven { url "${nexusUrl}" }
        maven {url "${aliyunUrl}"}
        maven { url "${springUrl}" }
        jcenter()
        mavenCentral()
    }
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
    dependencies {
//        compile 'org.projectlombok:lombok'

        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        testCompileOnly "org.projectlombok:lombok:${lombokVersion}"

        //junit
        testCompile group: 'junit', name: 'junit', version:"${junitVersion}"
    }
//    dependencyManagement {
//        imports {
//            //依赖管理
//            mavenBom "io.spring.platform:platform-bom:${platformVersion}"
//        }
//    }
    //这里一定得要。在多模块下，不然编译失败，因为不会把依赖模块给打包。
    jar {
        enabled = true
    }


}
