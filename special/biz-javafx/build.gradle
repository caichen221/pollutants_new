task copyToLib(type: Copy) {
    into "$buildDir/libs/lib"
    from configurations.runtime
}

//apply plugin: 'application'
//
//mainClassName = 'hello.HelloWorld'

def currentOS = org.gradle.internal.os.OperatingSystem.current()

def platform

if (currentOS.isWindows()) {

    platform = 'win'

} else if (currentOS.isLinux()) {

    platform = 'linux'

} else if (currentOS.isMacOsX()) {

    platform = 'mac'

}

//compileJava {
//    doFirst {
//        options.compilerArgs = [
//                '--module-path', classpath.asPath,
//                '--add-modules', 'javafx.controls,javafx.fxml'
//        ]
//    }
//}

task run(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "com.iscas.biz.jf.FxApp"
}

run {
    doFirst {
        jvmArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'javafx.controls,javafx.fxml'
        ]
    }
}


dependencies {

    compile "org.openjfx:javafx-base:11:${platform}"

    compile "org.openjfx:javafx-graphics:11:${platform}"

    compile "org.openjfx:javafx-controls:11:${platform}"

    compile "org.openjfx:javafx-fxml:11:${platform}"

    compile group: 'org.springframework.boot', name: 'spring-boot-autoconfigure'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter'


//    compile fileTree(dir:'fxlibs',include:['*.jar'])

    compile project(":common:common-tools")

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

//jar {
//    manifest {
//        attributes 'Main-Class': 'com.iscas.biz.jf.FxApp'
//    }
//    from {
//        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
//    }
//}


// 清除现有的lib目录
task clearJar(type: Delete) {
    delete "$buildDir\\libs\\lib"
}

// 将依赖包复制到lib目录
task copyJar(type: Copy, dependsOn: 'clearJar') {
    from configurations.compileClasspath
    into "$buildDir\\libs\\lib"
}

bootJar {
    // 例外所有的jar
    excludes = ["*.jar"]
    // lib目录的清除和复制任务
    dependsOn clearJar
    dependsOn copyJar

    mainClassName = 'com.iscas.biz.jf.JFApp'
    // 指定依赖包的路径
    manifest {
        attributes "Manifest-Version": 1.0,
                'Class-Path': configurations.compileClasspath.files.collect { "lib/$it.name" }.join(' ')
    }
}
